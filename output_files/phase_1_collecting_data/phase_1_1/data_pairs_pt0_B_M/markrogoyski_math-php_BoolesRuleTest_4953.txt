    /**
     * @test   approximate using sorted points
     * @throws \Exception
     *
     * f(x)                            = x³ + 2x + 1
     * Antiderivative F(x)             = (1/4)x⁴ + x² + x
     * Indefinite integral over [0, 4] = F(4) - F(0) = 84
     *
     * h           denotes the size of subintervals, or equivalently, the
     *                 distance between two points
     * ζ₁, ζ₂, ... denotes the max of the fourth derivative of f(x) on
     *                 interval 1, 2, ...
     * f'(x)    = 3x² + 2
     * f''(x)   = 6x
     * f'''(x)  = 6
     * f⁽⁴⁾(x)  = 0
     * f⁽⁵⁾(x)  = 0
     * f⁽⁶⁾(x)  = 0
     * Error    = O(h^5 * f⁽⁶⁾(x)) = 0
     */

    public function testApproximatePolynomialSortedPoints()
    {
        // Given
        $sortedPoints = [[0, 1], [1, 4], [2, 13], [3, 34], [4, 73]];
        $expected     = 84;
        $tol          = 0;

        // When
        $x = BoolesRule::approximate($sortedPoints);

        // Then
        $this->assertEqualsWithDelta($expected, $x, $tol);
    }
