    /**
     * @test   describe - population
     * @throws \Exception
     */

    public function testDescribePopulation()
    {
        // Given
        $population = true;

        // When
        $stats = Descriptive::describe([ 13, 18, 13, 14, 13, 16, 14, 21, 13 ], $population);

        // Then
        $this->assertTrue(\is_array($stats));
        $this->assertArrayHasKey('n', $stats);
        $this->assertArrayHasKey('min', $stats);
        $this->assertArrayHasKey('max', $stats);
        $this->assertArrayHasKey('mean', $stats);
        $this->assertArrayHasKey('median', $stats);
        $this->assertArrayHasKey('mode', $stats);
        $this->assertArrayHasKey('range', $stats);
        $this->assertArrayHasKey('midrange', $stats);
        $this->assertArrayHasKey('variance', $stats);
        $this->assertArrayHasKey('sd', $stats);
        $this->assertArrayHasKey('cv', $stats);
        $this->assertArrayHasKey('mean_mad', $stats);
        $this->assertArrayHasKey('median_mad', $stats);
        $this->assertArrayHasKey('quartiles', $stats);
        $this->assertArrayHasKey('midhinge', $stats);
        $this->assertArrayHasKey('skewness', $stats);
        $this->assertArrayHasKey('ses', $stats);
        $this->assertArrayHasKey('kurtosis', $stats);
        $this->assertArrayHasKey('sek', $stats);
        $this->assertArrayHasKey('sem', $stats);
        $this->assertArrayHasKey('ci_95', $stats);
        $this->assertArrayHasKey('ci_99', $stats);
        $this->assertTrue(\is_int($stats['n']));
        $this->assertTrue(\is_numeric($stats['min']));
        $this->assertTrue(\is_numeric($stats['max']));
        $this->assertTrue(\is_numeric($stats['mean']));
        $this->assertTrue(\is_numeric($stats['median']));
        $this->assertTrue(\is_array($stats['mode']));
        $this->assertTrue(\is_numeric($stats['range']));
        $this->assertTrue(\is_numeric($stats['midrange']));
        $this->assertTrue(\is_numeric($stats['variance']));
        $this->assertTrue(\is_numeric($stats['sd']));
        $this->assertTrue(\is_numeric($stats['cv']));
        $this->assertTrue(\is_numeric($stats['mean_mad']));
        $this->assertTrue(\is_numeric($stats['median_mad']));
        $this->assertTrue(\is_array($stats['quartiles']));
        $this->assertTrue(\is_numeric($stats['midhinge']));
        $this->assertTrue(\is_numeric($stats['skewness']));
        $this->assertTrue(\is_numeric($stats['ses']));
        $this->assertTrue(\is_numeric($stats['kurtosis']));
        $this->assertTrue(\is_numeric($stats['sek']));
        $this->assertTrue(\is_numeric($stats['sem']));
        $this->assertTrue(\is_array($stats['ci_95']));
        $this->assertTrue(\is_array($stats['ci_99']));
    }
