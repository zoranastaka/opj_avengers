    /**
     * Searches for the report file and returns the path to it
     *
     * @param string $reportId
     * @return string
     * @throws \RuntimeException
     */

    private function findReportFile(string $reportId): string
    {
        $reportFile = $this->getReportPath(
            $this->getReportDirNestingLevel($reportId),
            $reportId
        );
        if (file_exists($reportFile)) {
            return $reportFile;
        }
        $maxReportDirNestingLevel = $this->getMaxReportDirNestingLevel($reportId);
        for ($i = 0; $i <= $maxReportDirNestingLevel; $i++) {
            $reportFile = $this->getReportPath($i, $reportId);
            if (file_exists($reportFile)) {
                return $reportFile;
            }
        }
        throw new \RuntimeException("Report file not found");
    }
