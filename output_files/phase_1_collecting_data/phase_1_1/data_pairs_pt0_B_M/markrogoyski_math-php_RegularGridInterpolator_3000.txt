    /**
     * Interpolation of the grid at some coordinates
     *
     * @param  array $xi n-dimensional array containing the coordinates to sample the gridded data at
     *
     * @return float
     *
     * @throws Exception\BadDataException if dimensions do not match
     */

    public function __invoke(array $xi): float
    {
        $gridDimension  = \count($this->grid);
        $pointDimension = \count($xi);
        if (\count($xi) != $gridDimension) {
            throw new Exception\BadDataException('The requested sample points xi have dimension ' . "{$pointDimension}, but this RegularGridInterpolator has " . "dimension {$gridDimension}");
        }

        [$indices, $normDistances] = $this->findIndices($xi);

        return $this->method === self::METHOD_LINEAR
            ? $this->evaluateLinear($indices, $normDistances)
            : $this->evaluateNearest($indices, $normDistances);
    }
