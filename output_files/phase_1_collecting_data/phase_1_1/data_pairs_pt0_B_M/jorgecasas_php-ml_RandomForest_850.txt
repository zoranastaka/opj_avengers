    /**
     * @return DecisionTree
     */

    protected function initSingleClassifier(Classifier $classifier): Classifier
    {
        if (!$classifier instanceof DecisionTree) {
            throw new InvalidArgumentException(
                sprintf('Classifier %s expected, got %s', DecisionTree::class, get_class($classifier))
            );
        }

        if (is_float($this->featureSubsetRatio)) {
            $featureCount = (int) ($this->featureSubsetRatio * $this->featureCount);
        } elseif ($this->featureSubsetRatio === 'sqrt') {
            $featureCount = (int) ($this->featureCount ** .5) + 1;
        } else {
            $featureCount = (int) log($this->featureCount, 2) + 1;
        }

        if ($featureCount >= $this->featureCount) {
            $featureCount = $this->featureCount;
        }

        if ($this->columnNames === null) {
            $this->columnNames = range(0, $this->featureCount - 1);
        }

        return $classifier
            ->setColumnNames($this->columnNames)
            ->setNumFeatures($featureCount);
    }
