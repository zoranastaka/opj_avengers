    /**
     * @test   approximate using callback
     * @throws \Exception
     *
     * f(x)                            = x² + 2x + 1
     * Antiderivative F(x)             = (1/3)x³ + x² + x
     * Indefinite integral over [0, 3] = F(3) - F(0) = 21
     *
     * h           denotes the size of subintervals, or equivalently, the distance between two points
     * ζ₁, ζ₂, ... denotes the max of the fourth derivative of f(x) on interval 1, 2, ...
     * f'(x)    = 2x + 2
     * f''(x)   = 2
     * f'''(x)  = 0
     * f''''(x) = 0
     * ζ        = f''''(x) = 0
     * Error    = O(h^5 * ζ) = 0
     */

    public function testApproximateUsingCallback()
    {
        // Given x² + 2x + 1
        $func = $func = function ($x) {
            return $x ** 2 + 2 * $x + 1;
        };
        $start    = 0;
        $end      = 3;
        $n        = 3;
        $tol      = 0;
        $expected = 21;

        // When
        $x = SimpsonsRule::approximate($func, $start, $end, $n);

        // Then
        $this->assertEqualsWithDelta($expected, $x, $tol);
    }
