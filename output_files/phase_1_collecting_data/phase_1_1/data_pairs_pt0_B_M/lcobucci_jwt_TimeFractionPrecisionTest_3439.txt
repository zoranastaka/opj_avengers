    /**
     * @test
     * @dataProvider datesWithPotentialRoundingIssues
     */

    public function timeFractionsPrecisionsAreRespected(string $timeFraction): void
    {
        $config = Configuration::forUnsecuredSigner();

        $issuedAt = DateTimeImmutable::createFromFormat('U.u', $timeFraction);

        self::assertInstanceOf(DateTimeImmutable::class, $issuedAt);
        self::assertSame($timeFraction, $issuedAt->format('U.u'));

        $token = $config->builder()
            ->issuedAt($issuedAt)
            ->getToken($config->signer(), $config->signingKey());

        $parsedToken = $config->parser()->parse($token->toString());

        self::assertInstanceOf(Plain::class, $parsedToken);
        self::assertSame($timeFraction, $parsedToken->claims()->get('iat')->format('U.u'));
    }
