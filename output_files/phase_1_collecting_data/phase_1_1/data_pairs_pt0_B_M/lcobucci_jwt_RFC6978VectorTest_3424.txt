    /** @return mixed[] */

    public function sha256Data(): iterable
    {
        $signer = Sha256::create();
        $key    = InMemory::plainText(
            '-----BEGIN PUBLIC KEY-----' . PHP_EOL
            . 'MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEYP7UuiVanTHJYet0xjVtaMBJuJI7' . PHP_EOL
            . 'Yfps5mliLmDyn7Z5A/4QCLi8maQa6elWKLxk8vGyDC1+n1F3o8KU1EYimQ==' . PHP_EOL
            . '-----END PUBLIC KEY-----'
        );

        yield 'SHA-256 (sample)' => [
            $signer,
            $key,
            'sample',
            'EFD48B2AACB6A8FD1140DD9CD45E81D69D2C877B56AAF991C34D0EA84EAF3716',
            'F7CB1C942D657C41D436C7A1B6E29F65F3E900DBB9AFF4064DC4AB2F843ACDA8',
        ];

        yield 'SHA-256 (test)' => [
            $signer,
            $key,
            'test',
            'F1ABB023518351CD71D881567B1EA663ED3EFCF6C5132B354F28D3B0B7D38367',
            '019F4113742A2B14BD25926B49C649155F267E60D3814B4C0CC84250E46F0083',
        ];
    }
