    /**
     * @SuppressWarnings(PHPMD.ExcessiveMethodLength) // cannot be helped.
     */

    private function createBudgetTables(): void
    {
        if (!Schema::hasTable('budgets')) {
            Schema::create(
                'budgets',
                static function (Blueprint $table) {
                    $table->increments('id');
                    $table->timestamps();
                    $table->softDeletes();
                    $table->integer('user_id', false, true);
                    $table->string('name', 1024);
                    $table->boolean('active')->default(1);
                    $table->boolean('encrypted')->default(0);
                    $table->foreign('user_id')->references('id')->on('users')->onDelete('cascade');
                }
            );
        }
        if (!Schema::hasTable('budget_limits')) {
            Schema::create(
                'budget_limits',
                static function (Blueprint $table) {
                    $table->increments('id');
                    $table->timestamps();
                    $table->integer('budget_id', false, true);
                    $table->date('startdate');
                    $table->decimal('amount', 36, 24);
                    $table->string('repeat_freq', 30);
                    $table->boolean('repeats')->default(0);
                    $table->foreign('budget_id')->references('id')->on('budgets')->onDelete('cascade');
                }
            );
        }
        if (!Schema::hasTable('limit_repetitions')) {
            Schema::create(
                'limit_repetitions',
                static function (Blueprint $table) {
                    $table->increments('id');
                    $table->timestamps();
                    $table->integer('budget_limit_id', false, true);
                    $table->date('startdate');
                    $table->date('enddate');
                    $table->decimal('amount', 36, 24);
                    $table->foreign('budget_limit_id')->references('id')->on('budget_limits')->onDelete('cascade');
                }
            );
        }
    }
