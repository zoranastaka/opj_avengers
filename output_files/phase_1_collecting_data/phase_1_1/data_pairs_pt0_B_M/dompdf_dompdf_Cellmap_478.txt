    /**
     * @param int $i
     * @param int $j
     * @param mixed $h_v
     * @param mixed $border_spec
     *
     * @return mixed
     */

    protected function _resolve_border($i, $j, $h_v, $border_spec)
    {
        $n_width = $border_spec["width"];
        $n_style = $border_spec["style"];

        if (!isset($this->_borders[$i][$j][$h_v])) {
            $this->_borders[$i][$j][$h_v] = $border_spec;

            return $this->_borders[$i][$j][$h_v]["width"];
        }

        $border = & $this->_borders[$i][$j][$h_v];

        $o_width = $border["width"];
        $o_style = $border["style"];

        if (($n_style === "hidden" ||
                $n_width > $o_width ||
                $o_style === "none")

            or

            ($o_width == $n_width &&
                in_array($n_style, self::$_BORDER_STYLE_SCORE) &&
                self::$_BORDER_STYLE_SCORE[$n_style] > self::$_BORDER_STYLE_SCORE[$o_style])
        ) {
            $border = $border_spec;
        }

        return $border["width"];
    }
