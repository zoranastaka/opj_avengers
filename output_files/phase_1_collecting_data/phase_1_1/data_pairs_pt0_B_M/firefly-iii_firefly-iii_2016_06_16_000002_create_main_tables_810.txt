    /**
     * @SuppressWarnings(PHPMD.ExcessiveMethodLength) // cannot be helped.
     * @SuppressWarnings(PHPMD.NPathComplexity) // cannot be helped
     * @SuppressWarnings(PHPMD.CyclomaticComplexity) // its exactly five
     */

    private function createTransactionTables(): void
    {
        if (!Schema::hasTable('transaction_journals')) {
            Schema::create(
                'transaction_journals',
                static function (Blueprint $table) {
                    $table->increments('id');
                    $table->timestamps();
                    $table->softDeletes();
                    $table->integer('user_id', false, true);
                    $table->integer('transaction_type_id', false, true);
                    $table->integer('bill_id', false, true)->nullable();
                    $table->integer('transaction_currency_id', false, true);
                    $table->string('description', 1024);
                    $table->date('date');
                    $table->date('interest_date')->nullable();
                    $table->date('book_date')->nullable();
                    $table->date('process_date')->nullable();
                    $table->integer('order', false, true)->default(0);
                    $table->integer('tag_count', false, true);
                    $table->boolean('encrypted')->default(1);
                    $table->boolean('completed')->default(1);
                    $table->foreign('user_id')->references('id')->on('users')->onDelete('cascade');
                    $table->foreign('transaction_type_id')->references('id')->on('transaction_types')->onDelete('cascade');
                    $table->foreign('bill_id')->references('id')->on('bills')->onDelete('set null');
                    $table->foreign('transaction_currency_id')->references('id')->on('transaction_currencies')->onDelete('cascade');
                }
            );
        }

        if (!Schema::hasTable('journal_meta')) {
            Schema::create(
                'journal_meta',
                static function (Blueprint $table) {
                    $table->increments('id');
                    $table->timestamps();
                    $table->integer('transaction_journal_id', false, true);
                    $table->string('name', 255);
                    $table->text('data');
                    $table->string('hash', 64);
                    $table->foreign('transaction_journal_id')->references('id')->on('transaction_journals')->onDelete('cascade');
                }
            );
        }

        if (!Schema::hasTable('tag_transaction_journal')) {
            Schema::create(
                'tag_transaction_journal',
                static function (Blueprint $table) {
                    $table->increments('id');
                    $table->integer('tag_id', false, true);
                    $table->integer('transaction_journal_id', false, true);
                    $table->foreign('tag_id')->references('id')->on('tags')->onDelete('cascade');
                    $table->foreign('transaction_journal_id')->references('id')->on('transaction_journals')->onDelete('cascade');

                    // unique combi:
                    $table->unique(['tag_id', 'transaction_journal_id']);
                }
            );
        }

        if (!Schema::hasTable('budget_transaction_journal')) {
            Schema::create(
                'budget_transaction_journal',
                static function (Blueprint $table) {
                    $table->increments('id');
                    $table->integer('budget_id', false, true);
                    $table->integer('transaction_journal_id', false, true);
                    $table->foreign('budget_id')->references('id')->on('budgets')->onDelete('cascade');
                    $table->foreign('transaction_journal_id')->references('id')->on('transaction_journals')->onDelete('cascade');
                }
            );
        }

        if (!Schema::hasTable('category_transaction_journal')) {
            Schema::create(
                'category_transaction_journal',
                static function (Blueprint $table) {
                    $table->increments('id');
                    $table->integer('category_id', false, true);
                    $table->integer('transaction_journal_id', false, true);
                    $table->foreign('category_id')->references('id')->on('categories')->onDelete('cascade');
                    $table->foreign('transaction_journal_id')->references('id')->on('transaction_journals')->onDelete('cascade');
                }
            );
        }

        if (!Schema::hasTable('piggy_bank_events')) {
            Schema::create(
                'piggy_bank_events',
                static function (Blueprint $table) {
                    $table->increments('id');
                    $table->timestamps();
                    $table->integer('piggy_bank_id', false, true);
                    $table->integer('transaction_journal_id', false, true)->nullable();
                    $table->date('date');
                    $table->decimal('amount', 36, 24);

                    $table->foreign('piggy_bank_id')->references('id')->on('piggy_banks')->onDelete('cascade');
                    $table->foreign('transaction_journal_id')->references('id')->on('transaction_journals')->onDelete('set null');
                }
            );
        }

        if (!Schema::hasTable('transactions')) {
            Schema::create(
                'transactions',
                static function (Blueprint $table) {
                    $table->increments('id');
                    $table->timestamps();
                    $table->softDeletes();
                    $table->integer('account_id', false, true);
                    $table->integer('transaction_journal_id', false, true);
                    $table->string('description', 1024)->nullable();
                    $table->decimal('amount', 36, 24);

                    $table->foreign('account_id')->references('id')->on('accounts')->onDelete('cascade');
                    $table->foreign('transaction_journal_id')->references('id')->on('transaction_journals')->onDelete('cascade');
                }
            );
        }

        if (!Schema::hasTable('budget_transaction')) {
            Schema::create(
                'budget_transaction',
                static function (Blueprint $table) {
                    $table->increments('id');
                    $table->integer('budget_id', false, true);
                    $table->integer('transaction_id', false, true);

                    $table->foreign('budget_id')->references('id')->on('budgets')->onDelete('cascade');
                    $table->foreign('transaction_id')->references('id')->on('transactions')->onDelete('cascade');
                }
            );
        }

        if (!Schema::hasTable('category_transaction')) {
            Schema::create(
                'category_transaction',
                static function (Blueprint $table) {
                    $table->increments('id');
                    $table->integer('category_id', false, true);
                    $table->integer('transaction_id', false, true);

                    $table->foreign('category_id')->references('id')->on('categories')->onDelete('cascade');
                    $table->foreign('transaction_id')->references('id')->on('transactions')->onDelete('cascade');
                }
            );
        }
    }
