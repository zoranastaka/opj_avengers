    /**
     * One-sample Student's t-test from summary data
     * Compares sample mean to the population mean.
     * https://en.wikipedia.org/wiki/Student%27s_t-test
     *
     *     Hₐ - H₀   M - μ   M - μ   M - μ
     * t = ------- = ----- = ----- = -----
     *        σ        σ      SEM     σ/√n
     *
     * p1 = CDF below if left tailed
     *    = CDF above if right tailed
     * p2 = CDF outside
     *
     * @param float $Hₐ Alternate hypothesis (M Sample mean)
     * @param float $s  SD of sample
     * @param int    $n  Sample size
     * @param float $H₀ Null hypothesis (μ₀ Population mean)
     *
     * @return array [
     *   t    => t score
     *   df   => degrees of freedom
     *   p1   => one-tailed p value (left or right tail depends on how Hₐ differs from H₀)
     *   p2   => two-tailed p value
     *   mean => sample mean
     *   sd   => standard deviation
     * ]
     */

    public static function tTestOneSampleFromSummaryData(float $Hₐ, float $s, int $n, float $H₀): array
    {
        // Calculate test statistic t
        $t = self::tScore($Hₐ, $s, $n, $H₀);

        // Degrees of freedom
        $ν = $n - 1;

        // One- and two-tailed P values
        $studentT = new StudentT($ν);
        if ($Hₐ < $H₀) {
            $p1 = $studentT->cdf($t);
        } else {
            $p1 = $studentT->above($t);
        }
        $p2 = $studentT->outside(-\abs($t), \abs($t));

        return [
            't'    => $t,
            'df'   => $ν,
            'p1'   => $p1,
            'p2'   => $p2,
            'mean' => $Hₐ,
            'sd'   => $s,
        ];
    }
