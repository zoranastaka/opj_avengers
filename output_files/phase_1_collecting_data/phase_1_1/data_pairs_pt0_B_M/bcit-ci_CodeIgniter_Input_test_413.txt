	// --------------------------------------------------------------------

	public function test_ip_address()
	{
		$reflection = new ReflectionProperty($this->input, 'ip_address');
		$reflection->setAccessible(TRUE);

		$reflection->setValue($this->input, '127.0.0.1');
		$this->assertEquals('127.0.0.1', $this->input->ip_address());

		// 127.0.0.1 is set in our Bootstrap file
		$reflection->setValue($this->input, FALSE);
		$this->assertEquals('127.0.0.1', $this->input->ip_address());

		// Invalid
		$_SERVER['REMOTE_ADDR'] = 'invalid_ip_address';
		$reflection->setValue($this->input, FALSE); // reset cached value
		$this->assertEquals('0.0.0.0', $this->input->ip_address());

		$_SERVER['REMOTE_ADDR'] = '127.0.0.1';

		// Proxy_ips tests
		$reflection->setValue($this->input, FALSE);
		$this->ci_set_config('proxy_ips', '127.0.0.3, 127.0.0.4, 127.0.0.2');
		$_SERVER['HTTP_CLIENT_IP'] = '127.0.0.2';
		$this->assertEquals('127.0.0.1', $this->input->ip_address());

		// Invalid spoof
		$reflection->setValue($this->input, FALSE);
		$this->ci_set_config('proxy_ips', 'invalid_ip_address');
		$_SERVER['HTTP_CLIENT_IP'] = 'invalid_ip_address';
		$this->assertEquals('127.0.0.1', $this->input->ip_address());

		$reflection->setValue($this->input, FALSE);
		$this->ci_set_config('proxy_ips', 'http://foo/bar/baz, 127.0.0.1/1');
		$_SERVER['HTTP_CLIENT_IP'] = '127.0.0.1';
		$this->assertEquals('127.0.0.1', $this->input->ip_address());

		$reflection->setValue($this->input, FALSE);
		$this->ci_set_config('proxy_ips', 'http://foo/bar/baz, 127.0.0.2');
		$_SERVER['HTTP_CLIENT_IP'] = '127.0.0.2';
		$_SERVER['REMOTE_ADDR'] = '127.0.0.2';
		$this->assertEquals('127.0.0.2', $this->input->ip_address());

		// IPv6
		$reflection->setValue($this->input, FALSE);
		$this->ci_set_config('proxy_ips', 'FE80:0000:0000:0000:0202:B3FF:FE1E:8329/1, FE80:0000:0000:0000:0202:B3FF:FE1E:8300/2');
		$_SERVER['HTTP_CLIENT_IP'] = 'FE80:0000:0000:0000:0202:B3FF:FE1E:8300';
		$_SERVER['REMOTE_ADDR'] = 'FE80:0000:0000:0000:0202:B3FF:FE1E:8329';
		$this->assertEquals('FE80:0000:0000:0000:0202:B3FF:FE1E:8300', $this->input->ip_address());

		$reflection->setValue($this->input, FALSE);
		$this->ci_set_config('proxy_ips', '0::/32');
		$_SERVER['HTTP_CLIENT_IP'] = '127.0.0.7';
		$_SERVER['REMOTE_ADDR'] = '0000:0000:0000:0000:0000:0000:0000:0001';
		$this->assertEquals('127.0.0.7', $this->input->ip_address());

		$reflection->setValue($this->input, FALSE);
		$_SERVER['REMOTE_ADDR'] = '127.0.0.1'; // back to reality
	}
