    /**
     * @test         tTestTwoSample
     * @dataProvider dataProviderFortTestTwoSampleDataSet
     * @param        array $x₁
     * @param        array $x₂
     * @param        float $μ₁ Sample mean of population 1
     * @param        float $μ₂ Sample mean of population 2
     * @param        int   $n₁ Sample size of population 1
     * @param        int   $n₂ Sample size of population 1
     * @param        float $σ₁ Standard deviation of sample mean 1
     * @param        float $σ₂ Standard deviation of sample mean 2
     * @param        array  $expected
     */

    public function testtTestTwoSample(array $x₁, array $x₂, float $μ₁, float $μ₂, int $n₁, int $n₂, float $σ₁, float $σ₂, array $expected)
    {
        // When
        $tTest = Significance::tTestTwoSample($x₁, $x₂);

        // Then
        $this->assertEqualsWithDelta($expected['t'], $tTest['t'], 0.00001);
        $this->assertEqualsWithDelta($expected['df'], $tTest['df'], 0.00001);
        $this->assertEqualsWithDelta($expected['p1'], $tTest['p1'], 0.0001);
        $this->assertEqualsWithDelta($expected['p2'], $tTest['p2'], 0.00001);
        $this->assertEqualsWithDelta($μ₁, $tTest['mean1'], 0.00001);
        $this->assertEqualsWithDelta($μ₂, $tTest['mean2'], 0.00001);
        $this->assertEqualsWithDelta($σ₁, $tTest['sd1'], 0.00001);
        $this->assertEqualsWithDelta($σ₂, $tTest['sd2'], 0.00001);
    }
