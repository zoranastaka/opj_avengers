    /**
     * @test
     * @dataProvider dataProviderForDifferenceMultiSet
     */

    public function testDifferenceMultiSet(array $A, array $B, array $C, array $diff, Set $R)
    {
        // Given
        $setA     = new Set($A);
        $setB     = new Set($B);
        $setC     = new Set($C);
        $expected = new Set($diff);

        // When
        $difference       = $setA->difference($setB, $setC);
        $difference_array = $difference->asArray();

        // Then
        $this->assertEquals($R, $difference);
        $this->assertEquals($expected, $difference);
        $this->assertEquals(count($diff), count($difference));
        foreach ($diff as $member) {
            $this->assertArrayHasKey("$member", $difference_array);
            $this->assertArrayHasKey("$member", $setA->asArray());
            $this->assertArrayNotHasKey("$member", $setB->asArray());
            $this->assertArrayNotHasKey("$member", $setC->asArray());
            $this->assertContains("$member", $A);
            $this->assertNotContains("$member", $B);
            $this->assertNotContains("$member", $C);
        }
        foreach ($diff as $_ => $value) {
            if ($value instanceof Set) {
                $this->assertEquals($value, $difference_array["$value"]);
            } else {
                $this->assertContains("$value", $difference_array);
            }
        }
    }
