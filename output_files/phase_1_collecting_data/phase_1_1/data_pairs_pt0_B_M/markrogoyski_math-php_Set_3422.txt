    /**
     * Cartesian product (A×B)
     * Produces a new set by associating every element of the set with every
     * element of the other set(s).
     *
     * Example:
     *  A   = (1, 2)
     *  B   = (a, b)
     *  A×B = ((1, a), (1, b), (2, a), (2, b))
     *
     * @param  Set ...$Bs One or more sets
     *
     * @return Set
     */

    public function cartesianProduct(Set ...$Bs): Set
    {
        $A×B     = [];
        $product = $this->length();
        $sets    = [$this->asArray()];

        foreach ($Bs as $B) {
            $product *= $B->length();
            $sets[]   = $B->asArray();
        }

        $l = \count($sets);

        for ($i = 0; $i < $product; ++$i) {
            $elements = [];
            for ($i2 = 0; $i2 < $l; ++$i2) {
                $elements[] = \current($sets[$i2]);
            }

            $A×B[] = new Set($elements);

            // Advance array pointers
            for ($i2 = 0; $i2 < $l; ++$i2) {
                \next($sets[$i2]);
                $key = key($sets[$i2]);
                if ($key !== null) {
                    break;
                }
                \reset($sets[$i2]);
            }
        }

        return new Set($A×B);
    }
