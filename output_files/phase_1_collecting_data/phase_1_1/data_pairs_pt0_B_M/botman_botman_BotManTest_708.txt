    /** @test */

    public function it_returns_contact_as_second_argument()
    {
        $called = false;
        $phone_number = '0775269856';
        $first_name = 'Daniele';
        $last_name = 'Rapisarda';
        $user_id = '123';

        $contact = new Contact($phone_number, $first_name, $last_name, $user_id);

        $message = new IncomingMessage(Contact::PATTERN, '', '');
        $message->setContact($contact);

        $botman = $this->getBot([]);

        $driver = m::mock(FakeDriver::class)->makePartial();
        $driver->shouldReceive('getMessages')
            ->andReturn([
                $message,
            ]);

        $botman->setDriver($driver);

        $botman->receivesContact(function ($bot, $data) use (&$called, $contact) {
            $called = true;
            $this->assertInstanceOf(Contact::class, $data);
            $this->assertSame($contact, $data);
        });
        $botman->listen();
        $this->assertTrue($called);
    }
