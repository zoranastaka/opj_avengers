	// --------------------------------------------------------------------

	public function test_library_extension()
	{
		// Create library and extension in VFS
		$name = 'ext_test_lib';
		$lib = ucfirst($name);
		$class = 'CI_'.$lib;
		$ext = $this->prefix.$lib;
		$this->ci_vfs_create($lib, '<?php class '.$class.' { }', $this->ci_base_root, 'libraries');
		$this->ci_vfs_create($ext, '<?php class '.$ext.' extends '.$class.' { }', $this->ci_app_root, 'libraries');

		// Test loading with extension
		$this->assertInstanceOf('CI_Loader', $this->load->library($lib));
		$this->assertTrue(class_exists($class), $class.' does not exist');
		$this->assertTrue(class_exists($ext), $ext.' does not exist');
		$this->assertAttributeInstanceOf($class, $name, $this->ci_obj);
		$this->assertAttributeInstanceOf($ext, $name, $this->ci_obj);

		// Test reloading with object name
		$obj = 'exttest';
		$this->assertInstanceOf('CI_Loader', $this->load->library($lib, NULL, $obj));
		$this->assertAttributeInstanceOf($class, $obj, $this->ci_obj);
		$this->assertAttributeInstanceOf($ext, $obj, $this->ci_obj);

		// Test reloading
		unset($this->ci_obj->$name);
		$this->assertInstanceOf('CI_Loader', $this->load->library($lib));
		$this->assertObjectHasAttribute($name, $this->ci_obj);

		// Create baseless library
		$name = 'ext_baseless_lib';
		$lib = ucfirst($name);
		$class = $this->prefix.$lib;
		$this->ci_vfs_create($class, '<?php class '.$class.' { }', $this->ci_app_root, 'libraries');

		// Test missing base class
		$this->setExpectedException(
			'RuntimeException',
			'CI Error: Unable to load the requested class: '.$lib
		);
		$this->assertInstanceOf('CI_Loader', $this->load->library($lib));
	}
