    /**
     * @test LU decomposition with small pivots
     *       (http://buzzard.ups.edu/courses/2014spring/420projects/math420-UPS-spring-2014-reid-LU-pivoting.pdf)
     *       Results computed with SciPy scipy.linalg.lu(A)
     * @throws \Exception
     */

    public function testLuDecompositionSmallPivots()
    {
        // Given
        $A = MatrixFactory::create([
            [10e-20, 1],
            [1, 2],
        ]);

        // And
        $L = MatrixFactory::create([
            [1, 0],
            [1e-19, 1],
        ]);
        $U = MatrixFactory::create([
            [1, 2],
            [0, 1],
        ]);
        $P = MatrixFactory::create([
            [0, 1],
            [1, 0],
        ]);

        // When
        $LU = $A->luDecomposition();

        // Then
        $this->assertEqualsWithDelta($L, $LU->L, 1e-20);
        $this->assertEqualsWithDelta($U, $LU->U, 1e-20);
        $this->assertEqualsWithDelta($P, $LU->P, 1e-20);

        // And
        $this->assertTrue($LU->L->isLowerTriangular());
        $this->assertTrue($LU->U->isUpperTriangular());

        // And PA = LU;
        $PA = $LU->P->multiply($A);
        $LU = $LU->L->multiply($LU->U);
        $this->assertEqualsWithDelta($PA->getMatrix(), $LU->getMatrix(), 0.01);
    }
