    /**
     * Test injecting a custom validator.
     */

    public function testCustomValidator()
    {
        //Inject a one-off custom validator
        self::assertTrue(
            PHPMailer::validateAddress(
                'user@example.com',
                function ($address) {
                    return strpos($address, '@') !== false;
                }
            ),
            'Custom validator false negative'
        );
        self::assertFalse(
            PHPMailer::validateAddress(
                'userexample.com',
                function ($address) {
                    return strpos($address, '@') !== false;
                }
            ),
            'Custom validator false positive'
        );
        //Set the default validator to an injected function
        PHPMailer::$validator = function ($address) {
            return 'user@example.com' === $address;
        };
        self::assertTrue(
            $this->Mail->addAddress('user@example.com'),
            'Custom default validator false negative'
        );
        self::assertFalse(
        //Need to pick a failing value which would pass all other validators
        //to be sure we're using our custom one
            $this->Mail->addAddress('bananas@example.com'),
            'Custom default validator false positive'
        );
        //Set default validator to PHP built-in
        PHPMailer::$validator = 'php';
        self::assertFalse(
        //This is a valid address that FILTER_VALIDATE_EMAIL thinks is invalid
            $this->Mail->addAddress('first.last@example.123'),
            'PHP validator not behaving as expected'
        );
    }
