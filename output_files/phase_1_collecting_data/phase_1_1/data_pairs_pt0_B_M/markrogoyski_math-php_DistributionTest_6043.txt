    /**
     * Data generated with R: rank(c(1, 2, 3, 4, 5), ties.method='first')
     * @return array
     */

    public function dataProviderForOrdinalRanking(): array
    {
        return [
            [
                [1, 2, 2, 3],
                [1, 2, 3, 4],
            ],
            [
                [3, 2, 2, 1],
                [4, 2, 3, 1],
            ],
            [
                [1, 2, 3, 3, 4, 5],
                [1, 2, 3, 4, 5, 6],
            ],
            [
                [1, 2, 3, 3, 3, 4, 5],
                [1, 2, 3, 4, 5, 6, 7],

            ],
            [
                [1, 1],
                [1, 2],
            ],
            [
                [0, 0],
                [1, 2],
            ],
            [
                [-1, -1],
                [1, 2],
            ],
            [
                [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5],
                [4, 1, 6, 2, 7, 11, 3, 10, 8, 5, 9],
            ],
            [
                [1.0, 1.0, 2.0, 3.0, 3.0, 4.0, 5.0, 5.0, 5.0],
                [1, 2, 3, 4, 5, 6, 7, 8, 9],
            ],
            [
                [-3, -2, -2, -1, -1, 0, 1, 2, 3],
                [1, 2, 3, 4, 5, 6, 7, 8, 9],
            ],
            [
                [-1, 5, 7, -1],
                [1, 3, 4, 2],
            ],
            [
                [2.5, 2.5, 2.5, 3, 3, 2.5, 2.25, 2.75, 2, 2.75],
                [3, 4, 5, 9, 10, 6, 2, 7, 1, 8],
            ],
            [
                [2.25, 2.75, 2.75, 2.25, 2.25, 3.25, 2, 2, 2.75, 1.25],
                [4, 7, 8, 5, 6, 10, 2, 3, 9, 1],
            ],
            [
                [2.534, 2.512, 2.4634, 2.512, 2.543, 2.5, 2.51, 2.49, 2.49, 2.53, 2.5],
                [10, 7, 1, 8, 11, 4, 6, 2, 3, 9, 5],
            ],
        ];
    }
