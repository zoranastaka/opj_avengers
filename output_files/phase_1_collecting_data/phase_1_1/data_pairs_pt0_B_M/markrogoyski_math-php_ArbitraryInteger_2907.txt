    /**
     * Subtraction
     * Calculate the difference between two numbers
     *
     * @param int|string|ArbitraryInteger $number
     *
     * @return ArbitraryInteger
     *
     * @throws Exception\BadParameterException
     * @throws Exception\IncorrectTypeException
     */

    public function subtract($number): ArbitraryInteger
    {
        $number = self::create($number);

        if (!$number->isPositive()) {
            return $this->add($number->negate());
        }
        if (!$this->isPositive) {
            return $this->negate()->add($number)->negate();
        }
        if ($this->lessThan($number)) {
            return $number->subtract($this)->negate();
        }

        $number   = $number->toBinary();
        $carry    = 0;
        $len      = \strlen($this->base256);
        $num_len  = \strlen($number);
        $max_len  = \max($len, $num_len);
        $base_256 = \str_pad($this->base256, $max_len, \chr(0), STR_PAD_LEFT);
        $number   = \str_pad($number, $max_len, \chr(0), STR_PAD_LEFT);
        $result   = '';

        for ($i = 0; $i < $max_len; $i++) {
            $base_chr = \ord($base_256[$max_len - $i - 1]) - $carry;
            $carry    = 0;
            $num_chr  = \ord($number[$max_len - $i - 1]);

            if ($num_chr > $base_chr) {
                $base_chr += 256;
                $carry = 1;
            }

            $difference = $base_chr - $num_chr;
            $result     = \chr($difference) . $result;
        }

        return self::fromBinary($result, true);
    }
