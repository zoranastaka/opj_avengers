    /**
     * @covers Whoops\Run::handleException
     */

    public function testLastHandler()
    {
        $run = $this->getRunInstance();

        $handlerOne = $this->getHandler();
        $handlerTwo = $this->getHandler();
        $handlerThree = $this->getHandler();
        $handlerFour = $this->getHandler();

        $run->pushHandler($handlerOne);
        $run->prependHandler($handlerTwo);
        $run->appendHandler($handlerThree);
        $run->appendHandler($handlerFour);

        $test = $this;
        $handlerFour
            ->shouldReceive('handle')
            ->andReturnUsing(function () use ($test) {
                $test->fail('$handlerFour should not be called');
            });

        $handlerThree
            ->shouldReceive('handle')
            ->andReturn(Handler::LAST_HANDLER);

        $twoRan = false;

        $handlerOne
            ->shouldReceive('handle')
            ->andReturnUsing(function () use ($test, &$twoRan) {
                $test->assertTrue($twoRan);
            });

        $handlerTwo
            ->shouldReceive('handle')
            ->andReturnUsing(function () use (&$twoRan) {
                $twoRan = true;
            });

        $run->handleException($this->getException());

        // Reached the end without errors
        $this->assertTrue(true);
    }
