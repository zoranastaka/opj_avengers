/**
 * Javascript aggregator and builder class
 *
 * @category   HTML
 * @package    HTML_QuickForm2
 * @author     Alexey Borzov <avb@php.net>
 * @author     Bertrand Mansion <golgote@mamasam.com>
 * @version    Release: @package_version@
 */

class HTML_QuickForm2_JavascriptBuilder
{
   /**
    * Client-side rules
    * @var array
    */
    protected $rules = array();

   /**
    * Current form ID
    * @var string
    */
    protected $formId = null;

   /**
    * Sets the form currently being processed
    *
    * @param HTML_QuickForm2
    */
    public function startForm(HTML_QuickForm2 $form)
    {
        $this->formId = $form->getId();
        $this->rules[$this->formId] = array();
    }

   /**
    * Adds the Rule javascript to the list of current form Rules
    *
    * @param HTML_QuickForm2_Rule
    */
    public function addRule(HTML_QuickForm2_Rule $rule)
    {
        $this->rules[$this->formId][] = $rule->getJavascript();
    }

   /**
    * Returns client-side validation code
    *
    * @todo This shouldn't probably be __toString() as we can't throw exceptions from that
    * @todo Of course we shouldn't put library files into each page, need some means to include them via <script> tags
    */
    public function __toString()
    {
        $js = '';
        foreach ($this->rules as $formId => $rules) {
            if (!empty($rules)) {
                $js .= "new qf.validator(document.getElementById('{$formId}'), [\n" .
                       implode(",\n", $rules) .
                       "\n]);";
            }
        }
        if ('' != $js) {
            $js = "<script type=\"text/javascript\">\n//<![CDATA[\n" .
                  file_get_contents('@data_dir@/HTML_QuickForm2/quickform.js') .
                  "qf.events.contentReady(function() {\n{$js}\n});\n" .
                  "//]]>\n</script>";
        }
        return $js;
    }
}
