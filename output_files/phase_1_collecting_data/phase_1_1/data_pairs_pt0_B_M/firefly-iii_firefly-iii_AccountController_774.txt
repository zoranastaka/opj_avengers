    /**
     * @param AutocompleteRequest $request
     *
     * @return JsonResponse
     */

    public function accounts(AutocompleteRequest $request): JsonResponse
    {
        $data  = $request->getData();
        $types = $data['types'];
        $query = $data['query'];
        $date  = $data['date'] ?? today(config('app.timezone'));

        $return          = [];
        $result          = $this->repository->searchAccount((string)$query, $types, $data['limit']);
        $defaultCurrency = app('amount')->getDefaultCurrency();

        /** @var Account $account */
        foreach ($result as $account) {
            $nameWithBalance = $account->name;
            $currency        = $this->repository->getAccountCurrency($account) ?? $defaultCurrency;

            if (in_array($account->accountType->type, $this->balanceTypes, true)) {
                $balance         = app('steam')->balance($account, $date);
                $nameWithBalance = sprintf('%s (%s)', $account->name, app('amount')->formatAnything($currency, $balance, false));
            }

            $return[] = [
                'id'                      => (string)$account->id,
                'name'                    => $account->name,
                'name_with_balance'       => $nameWithBalance,
                'type'                    => $account->accountType->type,
                'currency_id'             => $currency->id,
                'currency_name'           => $currency->name,
                'currency_code'           => $currency->code,
                'currency_symbol'         => $currency->symbol,
                'currency_decimal_places' => $currency->decimal_places,
            ];
        }

        // custom order.
        $order = [AccountType::ASSET, AccountType::REVENUE, AccountType::EXPENSE];
        usort(
            $return, function ($a, $b) use ($order) {
            $pos_a = array_search($a['type'], $order);
            $pos_b = array_search($b['type'], $order);

            return $pos_a - $pos_b;
        }
        );

        return response()->json($return);
    }
