    /**
     * @test Example from Github issue 382
     *       https://github.com/markrogoyski/math-php/issues/382
     *
     * >>> xs = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
     * >>> ys = [10, 11, 12, 13, 14, 15, 16, 17, 18, 19];
     * >>> zs = [110, 111, 112, 113, 114, 115, 116, 117, 118, 119];
     *
     * >>> def func(x, y, z):
     * ...   return 2 * x + 3 * y - z
     *
     * >>> values = [[[func(x, y, z) for z in zs] for y in ys] for x in xs]
     *
     * >>> my_interpolating_function = RegularGridInterpolator((xs, ys, zs), values, method='nearest')
     * >>> my_interpolating_function([2.21, 12.1, 115.9])
     * array([-76.])
     */

    public function testIssue382ExampleNearest()
    {
        // Given
        $xs = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
        $ys = [10, 11, 12, 13, 14, 15, 16, 17, 18, 19];
        $zs = [110, 111, 112, 113, 114, 115, 116, 117, 118, 119];

        // And
        $func = function ($x, $y, $z) {
            return 2 * $x + 3 * $y - $z;
        };

        // And
        $data = [];
        foreach ($xs as $i => $x) {
            foreach ($ys as $j => $y) {
                foreach ($zs as $k => $z) {
                    $data[$i][$j][$k] = $func($x, $y, $z);
                }
            }
        }

        // When
        $interp = new RegularGridInterpolator([$xs, $ys, $zs], $data, 'nearest');
        $result = $interp([2.21, 12.1, 115.9]);

        // Then
        $this->assertEqualsWithDelta(-76, $result, 0.00001);
    }
