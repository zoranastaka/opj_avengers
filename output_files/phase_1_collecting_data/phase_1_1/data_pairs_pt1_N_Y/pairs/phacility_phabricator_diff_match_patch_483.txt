/**
 * Class representing one patch operation.
 * @constructor
 */

class patch_obj {
	/** @type {Array.<Array.<number|string>>} */
	public $diffs = array();
	/** @type {number?} */
	public $start1 = null;
	/** @type {number?} */
	public $start2 = null;
	/** @type {number} */
	public $length1 = 0;
	/** @type {number} */
	public $length2 = 0;

	/**
	 * Emmulate GNU diff's format.
	 * Header: @@ -382,8 +481,9 @@
	 * Indicies are printed as 1-based, not 0-based.
	 * @return {string} The GNU diff string.
	 */
	function toString() {
		if ($this->length1 === 0) {
			$coords1 = $this->start1 . ',0';
		} elseif ($this->length1 == 1) {
			$coords1 = $this->start1 + 1;
		} else {
			$coords1 = ($this->start1 + 1) . ',' . $this->length1;
		}
		if ($this->length2 === 0) {
			$coords2 = $this->start2 . ',0';
		} elseif ($this->length2 == 1) {
			$coords2 = $this->start2 + 1;
		} else {
			$coords2 = ($this->start2 + 1) . ',' . $this->length2;
		}
		$text = array ( '@@ -' . $coords1 . ' +' . $coords2 . " @@\n" );

		// Escape the body of the patch with %xx notation.
		for ($x = 0; $x < count($this->diffs); $x++) {
			switch ($this->diffs[$x][0]) {
				case DIFF_INSERT :
					$op = '+';
					break;
				case DIFF_DELETE :
					$op = '-';
					break;
				case DIFF_EQUAL :
					$op = ' ';
					break;
			}
			$text[$x +1] = $op . encodeURI($this->diffs[$x][1]) . "\n";
		}
		return str_replace('%20', ' ', implode('',$text));
	}
	function __toString(){
		return $this->toString();
	}
}
