    /**
     * @param $way
     * @param $position
     *
     * @return bool
     */

    public function updatePosition($way, $position)
    {
        if (!$res = Db::getInstance()->executeS(
            '
			SELECT cp.`id_cms`, cp.`position`, cp.`id_cms_category`
			FROM `' . _DB_PREFIX_ . 'cms` cp
			WHERE cp.`id_cms_category` = ' . (int) $this->id_cms_category . '
			ORDER BY cp.`position` ASC'
        )) {
            return false;
        }

        foreach ($res as $cms) {
            if ((int) $cms['id_cms'] == (int) $this->id) {
                $movedCms = $cms;
            }
        }

        if (!isset($movedCms) || !isset($position)) {
            return false;
        }

        // < and > statements rather than BETWEEN operator
        // since BETWEEN is treated differently according to databases
        return Db::getInstance()->execute('
			UPDATE `' . _DB_PREFIX_ . 'cms`
			SET `position`= `position` ' . ($way ? '- 1' : '+ 1') . '
			WHERE `position`
			' . ($way
                ? '> ' . (int) $movedCms['position'] . ' AND `position` <= ' . (int) $position
                : '< ' . (int) $movedCms['position'] . ' AND `position` >= ' . (int) $position) . '
			AND `id_cms_category`=' . (int) $movedCms['id_cms_category'])
        && Db::getInstance()->execute('
			UPDATE `' . _DB_PREFIX_ . 'cms`
			SET `position` = ' . (int) $position . '
			WHERE `id_cms` = ' . (int) $movedCms['id_cms'] . '
			AND `id_cms_category`=' . (int) $movedCms['id_cms_category']);
    }
