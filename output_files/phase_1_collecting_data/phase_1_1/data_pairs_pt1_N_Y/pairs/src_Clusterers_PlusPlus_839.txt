    /**
     * Seed k cluster centroids from a dataset.
     *
     * @internal
     *
     * @param \Rubix\ML\Datasets\Dataset $dataset
     * @param int $k
     * @return list<list<string|int|float>>
     */

    public function seed(Dataset $dataset, int $k) : array
    {
        DatasetIsNotEmpty::with($dataset)->check();

        $centroids = $dataset->randomSubset(1)->samples();

        while (count($centroids) < $k) {
            $weights = [];

            foreach ($dataset->samples() as $sample) {
                $bestDistance = INF;

                foreach ($centroids as $centroid) {
                    $distance = $this->kernel->compute($sample, $centroid);

                    if ($distance < $bestDistance) {
                        $bestDistance = $distance;
                    }
                }

                $weights[] = $bestDistance ** 2;
            }

            $centroids[] = $dataset->randomWeightedSubsetWithReplacement(1, $weights)->sample(0);
        }

        return $centroids;
    }
