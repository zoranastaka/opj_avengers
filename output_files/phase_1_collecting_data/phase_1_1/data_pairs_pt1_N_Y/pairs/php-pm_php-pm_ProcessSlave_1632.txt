    /**
     * Attempt a connection to the unix socket.
     *
     * @throws \RuntimeException
     */

    private function doConnect()
    {
        $connector = new UnixConnector($this->loop);
        $unixSocket = $this->getControllerSocketPath(false);

        $connector->connect($unixSocket)->done(
            function ($controller) {
                $this->controller = $controller;

                $this->loop->addSignal(SIGTERM, [$this, 'shutdown']);
                $this->loop->addSignal(SIGINT, [$this, 'shutdown']);
                \register_shutdown_function([$this, 'prepareShutdown']);

                $this->bindProcessMessage($this->controller);
                $this->controller->on('close', [$this, 'shutdown']);

                // port is the slave identifier
                $port = $this->config['port'];
                $socketPath = $this->getSlaveSocketPath($port, true);
                $this->server = new UnixServer($socketPath, $this->loop);

                if ($this->config['limit-concurrent-requests'] != null || $this->config['request-body-buffer'] != null) {
                    $httpServer = new HttpServer(
                        $this->loop,
                        new StreamingRequestMiddleware(),
                        new LimitConcurrentRequestsMiddleware($this->config['limit-concurrent-requests'] ?? 1024),
                        new RequestBodyBufferMiddleware($this->config['request-body-buffer'] ?? 65536),
                        new RequestBodyParserMiddleware(),
                        [$this, 'onRequest']
                    );
                } else {
                    $httpServer = new HttpServer($this->loop, [$this, 'onRequest']);
                }

                $httpServer->listen($this->server);
                if ($this->isLogging()) {
                    $httpServer->on('error', function (\Exception $e) {
                        \error_log(\sprintf('Worker error while processing the request. %s: %s', \get_class($e), $e->getMessage()));
                    });
                }

                $this->sendMessage($this->controller, 'register', ['pid' => \getmypid(), 'port' => $port]);
            }
        );
    }
