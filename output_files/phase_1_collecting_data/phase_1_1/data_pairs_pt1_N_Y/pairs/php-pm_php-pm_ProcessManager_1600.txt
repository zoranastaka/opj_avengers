    /**
     * Starts the main loop. Blocks.
     */

    public function run()
    {
        Debug::enable();
        \register_shutdown_function([$this, 'shutdown']);

        // make whatever is necessary to disable all stuff that could buffer output
        \ini_set('zlib.output_compression', 0);
        \ini_set('output_buffering', 0);
        \ini_set('implicit_flush', 1);
        \ob_implicit_flush(1);

        $this->loop = Factory::create();

        $this->web = new Server(\sprintf('%s:%d', $this->host, $this->port), $this->loop, ['backlog' => self::TCP_BACKLOG]);
        $this->web->on('connection', [$this, 'onRequest']);

        $this->controller = new UnixServer($this->getControllerSocketPath(), $this->loop);
        $this->controller->on('connection', [$this, 'onSlaveConnection']);

        $this->loop->addSignal(SIGTERM, [$this, 'shutdown']);
        $this->loop->addSignal(SIGINT, [$this, 'shutdown']);
        $this->loop->addSignal(SIGCHLD, [$this, 'handleSigchld']);
        $this->loop->addSignal(SIGUSR1, [$this, 'restartSlaves']);
        $this->loop->addSignal(SIGUSR2, [$this, 'reloadSlaves']);

        if ($this->isDebug()) {
            $this->loop->addPeriodicTimer(1, [$this, 'checkChangedFiles']);
        }

        $loopClass = (new \ReflectionClass($this->loop))->getShortName();

        $this->output->writeln("<info>Starting PHP-PM with {$this->slaveCount} workers, using {$loopClass} ...</info>");
        $this->writePidFile();

        $this->createSlaves();

        $this->loop->run();
    }
