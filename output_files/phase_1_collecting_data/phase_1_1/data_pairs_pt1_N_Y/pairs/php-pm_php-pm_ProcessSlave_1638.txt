    /**
     * @param ServerRequestInterface $request
     * @return ResponseInterface|false returns ResponseInterface if successfully served, false otherwise
     */

    protected function serveStatic(ServerRequestInterface $request)
    {
        $path = $request->getUri()->getPath();

        if ($path === '/') {
            $path = '/index.html';
        } else {
            $path = \str_replace("\\", '/', $path);
        }

        $path = Utils::parseQueryPath($path);

        if (false === $path) {
            //too many /../ in path
            return new Response(403);
        }

        $filePath = $this->getStaticDirectory() . $path;

        if (\substr($filePath, -4) === '.php' || ! \is_file($filePath)) {
            return false;
        }

        $mTime = \filemtime($filePath);

        if ($request->hasHeader('If-Modified-Since')) {
            $ifModifiedSince = $request->getHeaderLine('If-Modified-Since');
            if ($ifModifiedSince && \strtotime($ifModifiedSince) === $mTime) {
                // Client's cache IS current, so we just respond '304 Not Modified'.
                $response = new Response(304, [
                    'Last-Modified' => \gmdate('D, d M Y H:i:s', $mTime) . ' GMT'
                ]);
                return $response;
            }
        }

        $expires = 3600; //1 h
        $response = new Response(200, [
            'Content-Type' => $this->mimeContentType($filePath),
            'Content-Length' => \filesize($filePath),
            'Pragma' => 'public',
            'Cache-Control' => 'max-age=' . $expires,
            'Last-Modified' => \gmdate('D, d M Y H:i:s', $mTime) . ' GMT',
            'Expires' => \gmdate('D, d M Y H:i:s', \time() + $expires) . ' GMT'
        ], new ReadableResourceStream(\fopen($filePath, 'rb'), $this->loop));

        return $response;
    }
