/**
 * @param int $issueNumber
 * @return Comment[]
 */

function getComments(int $issueNumber): iterable
{
	/** @var Client */
	global $client;
	$page = 1;

	/** @var BotCommentParser */
	global $botCommentParser;

	/** @var \Github\Api\Issue $api */
	$api = $client->api('issue');
	while (true) {
		$newComments = $api->comments()->all('phpstan', 'phpstan', $issueNumber, [
			'page' => $page,
			'per_page' => 100,
		]);
		if (count($newComments) === 0) {
			break;
		}

		yield from array_map(function (array $comment) use ($botCommentParser): Comment {
			$examples = searchBody($comment['body'], $comment['user']['login']);
			if ($comment['user']['login'] === 'phpstan-bot') {
				$parserResult = $botCommentParser->parse($comment['body']);
				if (count($examples) !== 1 || $examples[0]->getHash() !== $parserResult->getHash()) {
					throw new BotCommentParserException();
				}

				return new BotComment($comment['body'], $examples[0], $parserResult->getDiff());
			}

			return new Comment($comment['user']['login'], $comment['body'], $examples);
		}, $newComments);
		$page++;
	}
}
