    /**
     * Registers a new comparator.
     *
     * This comparator will be returned by getComparatorFor() if its accept() method
     * returns TRUE for the compared values. It has higher priority than the
     * existing comparators, meaning that its accept() method will be invoked
     * before those of the other comparators.
     *
     * @param Comparator $comparator The comparator to be registered
     */

    public function register(Comparator $comparator)/*: void*/
    {
        array_unshift($this->customComparators, $comparator);

        $comparator->setFactory($this);
    }
